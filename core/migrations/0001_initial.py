# Generated by Django 5.2.3 on 2025-07-02 15:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodigoOcorrencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
                ('denominacao', models.CharField(max_length=255)),
                ('descricao_completa', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_unidade', models.CharField(max_length=100, unique=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Unidade',
                'verbose_name_plural': 'Unidades',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_funcional', models.CharField(max_length=20, unique=True)),
                ('nome', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('perfil', models.CharField(choices=[('Servidor', 'Servidor'), ('Delegado', 'Delegado'), ('Agente de Pessoal', 'Agente de Pessoal'), ('Administrador Geral', 'Administrador Geral')], default='Servidor', max_length=20)),
                ('ativo', models.BooleanField(default=True)),
                ('status_servidor', models.CharField(choices=[('Ativo', 'Ativo'), ('Aposentado', 'Aposentado'), ('Demitido', 'Demitido'), ('Falecido', 'Falecido')], default='Ativo', max_length=20)),
                ('primeiro_login', models.BooleanField(default=True)),
                ('data_inativacao', models.DateField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('lotacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servidores', to='core.unidade')),
                ('unidades_gerenciadas', models.ManyToManyField(blank=True, help_text="Selecione as unidades pelas quais este agente é responsável. Visível apenas para o perfil 'Agente de Pessoal'.", to='core.unidade', verbose_name='Unidades Gerenciadas')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FolhaPonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimestre', models.IntegerField(choices=[(1, '1º Trimestre (Jan-Fev-Mar)'), (2, '2º Trimestre (Abr-Mai-Jun)'), (3, '3º Trimestre (Jul-Ago-Set)'), (4, '4º Trimestre (Out-Nov-Dez)')])),
                ('ano', models.IntegerField()),
                ('status', models.CharField(default='Em Andamento', max_length=20)),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('servidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folhas_ponto', to=settings.AUTH_USER_MODEL)),
                ('unidade_id_geracao', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.unidade')),
            ],
        ),
        migrations.CreateModel(
            name='DiaPonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_dia', models.DateField()),
                ('servidor_assinou', models.BooleanField(default=False)),
                ('data_assinatura_servidor', models.DateField(blank=True, null=True)),
                ('delegado_conferiu', models.BooleanField(default=False)),
                ('data_conferencia', models.DateTimeField(blank=True, null=True)),
                ('codigo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.codigoocorrencia')),
                ('delegado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dias_conferidos', to=settings.AUTH_USER_MODEL)),
                ('folha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias', to='core.folhaponto')),
            ],
        ),
    ]
