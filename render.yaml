# ARQUIVO: render.yaml

# Define os serviços que compõem a nossa aplicação
services:
  # Serviço 1: Banco de Dados PostgreSQL
  - type: pgbouncer
    name: sigaf-db
    postgres:
      majorVersion: 15 # Usaremos a versão 15 do PostgreSQL
      port: 5432

  # Serviço 2: A Aplicação Web (Django)
  - type: web
    name: sigaf-web
    env: python # Define o ambiente como Python
    plan: free # Especifica que queremos usar o plano gratuito
    buildCommand: "./build.sh" # Diz ao Render para executar nosso script de build
    startCommand: "gunicorn sigaf_project.wsgi:application" # Comando para iniciar o servidor de produção
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: sigaf_project.settings.production # Diz ao Django para usar as configurações de produção
      - key: PYTHON_VERSION
        value: 3.11.9 # Especifica a versão do Python
      - key: DJANGO_SECRET_KEY
        generateValue: true # Pede ao Render para gerar uma SECRET_KEY segura e automática
      - key: DATABASE_URL
        fromService:
          type: pgbouncer
          name: sigaf-db
          property: connectionString # Pega a URL do banco de dados criado acima e a injeta como variável de ambiente